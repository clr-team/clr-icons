{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/clr-icons/api-autoload.umd.ts","webpack:///./src/clr-icons/api.ts","webpack:///./src/clr-icons/element.ts","webpack:///./src/clr-icons/utils/shape-template-observer.ts"],"names":[],"mappings":"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","file":"clr-icons.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/clr-icons/api-autoload.umd.ts\");\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ApiModule } from './api';\n\n/* tslint:disable:variable-name */\nconst ClarityIcons = ApiModule.instance;\nClarityIcons.init();\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { IconAlias, IconShapeSources } from './interfaces/icon-interfaces';\nimport { ShapeTemplateObserverModule } from './utils/shape-template-observer';\nimport { ElementModule } from './element';\n\n/* tslint:disable:no-namespace */\nexport namespace ApiModule {\n  export class ClarityIconsApi {\n    private iconShapeSources: IconShapeSources = {};\n\n    private validateName(name: string): boolean {\n      if (name.length === 0) {\n        throw new Error('Shape name or alias must be a non-empty string!');\n      }\n\n      if (/\\s/.test(name)) {\n        throw new Error('Shape name or alias must not contain any whitespace characters!');\n      }\n\n      return true;\n    }\n\n    private setIconTemplate(shapeName: string, shapeTemplate: string): void {\n      const trimmedShapeTemplate = shapeTemplate.trim();\n\n      if (this.validateName(shapeName)) {\n        // if the shape name exists, delete it.\n        if (this.iconShapeSources[shapeName]) {\n          delete this.iconShapeSources[shapeName];\n        }\n\n        this.iconShapeSources[shapeName] = trimmedShapeTemplate;\n\n        ShapeTemplateObserverModule.instance.emitChanges(shapeName, trimmedShapeTemplate);\n      }\n    }\n\n    private setIconAliases(templates: IconShapeSources, shapeName: string, aliasNames: string[]): void {\n      for (const aliasName of aliasNames) {\n        if (this.validateName(aliasName)) {\n          Object.defineProperty(templates, aliasName, {\n            get: function() {\n              return templates[shapeName];\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n    }\n\n    init(icons?: IconShapeSources) {\n      // check if there is a global object called \"ClarityIcons\"\n      if (typeof window !== 'undefined') {\n        if (window && !window.hasOwnProperty('ClarityIcons')) {\n          // Setting a global object called \"ClarityIcons\" to expose the ClarityIconsApi.\n          /* tslint:disable-next-line:no-string-literal */\n          window['ClarityIcons'] = instance;\n\n          // Defining clr-icon custom element\n          customElements.define('clr-icon', ElementModule.ClarityIconElement);\n        }\n      }\n      if (icons) {\n        instance.add(icons);\n      }\n    }\n\n    add(icons?: IconShapeSources): void {\n      if (typeof icons !== 'object') {\n        throw new Error(`The argument must be an object literal passed in the following pattern: \n                  { \"shape-name\": \"shape-template\" }`);\n      }\n\n      for (const shapeName in icons) {\n        if (icons.hasOwnProperty(shapeName)) {\n          this.setIconTemplate(shapeName, icons[shapeName]);\n        }\n      }\n    }\n\n    has(shapeName: string): boolean {\n      return !!this.iconShapeSources[shapeName];\n    }\n\n    get(shapeName?: string): any {\n      // if shapeName is not given, return all icon templates.\n      if (!shapeName) {\n        return this.iconShapeSources;\n      }\n\n      if (typeof shapeName !== 'string') {\n        throw new TypeError('Only string argument is allowed in this method.');\n      }\n\n      return this.iconShapeSources[shapeName];\n    }\n\n    alias(aliases?: IconAlias): void {\n      if (typeof aliases !== 'object') {\n        throw new Error(`The argument must be an object literal passed in the following pattern: \n                  { \"shape-name\": [\"alias-name\", ...] }`);\n      }\n\n      for (const shapeName in aliases) {\n        if (aliases.hasOwnProperty(shapeName)) {\n          if (this.iconShapeSources.hasOwnProperty(shapeName)) {\n            // set an alias to the icon if it exists in iconShapeSources.\n            this.setIconAliases(this.iconShapeSources, shapeName, aliases[shapeName]);\n          } else if (this.iconShapeSources.hasOwnProperty(shapeName)) {\n            // set an alias to the icon if it exists in iconShapeSources.\n            this.setIconAliases(this.iconShapeSources, shapeName, aliases[shapeName]);\n          } else {\n            throw new Error(\n              `An icon \"${shapeName}\" you are trying to set aliases to doesn't exist in the Clarity Icons sets!`\n            );\n          }\n        }\n      }\n    }\n  }\n\n  export const instance = new ClarityIconsApi();\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ApiModule } from './api';\nimport { ShapeTemplateObserverModule } from './utils/shape-template-observer';\n\n/* tslint:disable:no-namespace */\nexport namespace ElementModule {\n  /* CLR-ICON CUSTOM ELEMENT */\n\n  let clrIconId = 0;\n  const offScreenSpan = document.createElement('span');\n  offScreenSpan.className = 'is-off-screen';\n\n  let parentConstructor = function() {\n    return HTMLElement.apply(this, arguments);\n  };\n  if (typeof Reflect === 'object') {\n    parentConstructor = function() {\n      return (Reflect as any).construct(HTMLElement, arguments, this.constructor);\n    };\n  }\n\n  export function ClarityIconElement() {\n    'use strict';\n\n    const _instance = (parentConstructor as any).apply(this, arguments);\n\n    _instance.clrIconUniqId = '_clr_icon_' + clrIconId;\n    clrIconId++;\n\n    return _instance;\n  }\n\n  (ClarityIconElement as any).observedAttributes = ['shape', 'size', 'title'];\n\n  ClarityIconElement.prototype = Object.create(HTMLElement.prototype, {\n    constructor: { configurable: true, writable: true, value: ClarityIconElement },\n  });\n\n  ClarityIconElement.prototype.constructor = ClarityIconElement;\n\n  ClarityIconElement.prototype._appendCustomTitle = function() {\n    const cloneOffScreenSpan = <HTMLElement>offScreenSpan.cloneNode(false);\n    cloneOffScreenSpan.id = this.clrIconUniqId;\n    cloneOffScreenSpan.textContent = this.currentTitleAttrVal;\n    this.appendChild(cloneOffScreenSpan);\n  };\n\n  ClarityIconElement.prototype._setIconSize = function(size: string) {\n    if (!Number(size) || Number(size) < 0) {\n      this.style.width = null; // fallback to the original stylesheet value\n      this.style.height = null; // fallback to the original stylesheet value\n    } else {\n      this.style.width = size + 'px';\n      this.style.height = size + 'px';\n    }\n  };\n\n  ClarityIconElement.prototype.connectedCallback = function() {\n    // One thing to note here is that the attributeChangedCallback method is called for every attribute first\n    // before this connectedCallback method called only once when the custom element is inserted into the DOM.\n    // So we could check whether the attribute values really changed or not.\n    // If not, we don't need to execute the same codes again.\n\n    if (this.hasAttribute('size')) {\n      const sizeAttrValue = this.getAttribute('size');\n\n      if (this.currentSizeAttrVal !== sizeAttrValue) {\n        this.currentSizeAttrVal = sizeAttrValue;\n        this._setIconSize(sizeAttrValue);\n      }\n    }\n\n    // Note: the size attribute is irrelevant from the shape template;\n    // That's why the size checking placed before detecting changes in shape and title attributes.\n    // This means even if the shape is not found, the injected shape will have the user-given size.\n\n    if (this.hasAttribute('shape')) {\n      const shapeAttrValue = this.getAttribute('shape').split(/\\s/)[0];\n\n      this._shapeTemplateSubscription = ShapeTemplateObserverModule.instance.subscribeTo(\n        shapeAttrValue,\n        (updatedTemplate: string) => {\n          this._injectTemplate(updatedTemplate);\n        }\n      );\n\n      this.currentShapeAttrVal = shapeAttrValue;\n\n      if (ApiModule.instance.has(this.currentShapeAttrVal)) {\n        const currentShapeTemplate = ApiModule.instance.get(this.currentShapeAttrVal);\n        if (currentShapeTemplate === this.currentShapeTemplate) {\n          return;\n        } else {\n          this.currentShapeTemplate = currentShapeTemplate;\n        }\n      } else {\n        this._injectErrorTemplate();\n        return;\n      }\n    }\n\n    if (this.hasAttribute('title')) {\n      const titleAttrValue = this.getAttribute('title');\n\n      if (this.currentTitleAttrVal !== titleAttrValue) {\n        this.currentTitleAttrVal = titleAttrValue;\n      }\n\n      if (!this.currentShapeAttrVal) {\n        return;\n      }\n    }\n\n    this._injectTemplate();\n  };\n\n  ClarityIconElement.prototype.attributeChangedCallback = function(\n    attributeName: string,\n    oldValue: string,\n    newValue: string\n  ) {\n    if (attributeName === 'size') {\n      this._setIconSize(newValue);\n    }\n\n    // Note: the size attribute is irrelavent from the shape template;\n    // That's why the size checking placed before detecting changes in shape and title attributes.\n    // This means even if the shape is not found, the injected shape will have the user-given size.\n\n    if (attributeName === 'shape') {\n      this.currentShapeAttrVal = newValue.split(/\\s/)[0];\n\n      // transfer change handler callback to new shape name\n      if (this._shapeTemplateSubscription) {\n        // remove the existing change handler callback on the old shape name\n        this._shapeTemplateSubscription();\n        // create a new subscription on the new shape name\n        this._shapeTemplateSubscription = ShapeTemplateObserverModule.instance.subscribeTo(\n          this.currentShapeAttrVal,\n          (updatedTemplate: string) => {\n            this._injectTemplate(updatedTemplate);\n          }\n        );\n      }\n\n      if (ApiModule.instance.has(this.currentShapeAttrVal)) {\n        this.currentShapeTemplate = ApiModule.instance.get(this.currentShapeAttrVal);\n      } else {\n        this._injectErrorTemplate();\n        return;\n      }\n    }\n    if (attributeName === 'title') {\n      this.currentTitleAttrVal = newValue;\n\n      if (!this.currentShapeAttrVal) {\n        return;\n      }\n    }\n\n    this._injectTemplate();\n  };\n\n  ClarityIconElement.prototype.disconnectedCallback = function() {\n    // as the icon element is removed from the DOM,\n    // remove its listener callback function as well.\n    if (this._shapeTemplateSubscription) {\n      this._shapeTemplateSubscription();\n    }\n  };\n\n  ClarityIconElement.prototype._setAriaLabelledBy = function() {\n    const existingAriaLabelledBy: string = this.getAttribute('aria-labelledby');\n    if (!existingAriaLabelledBy) {\n      this.setAttribute('aria-labelledby', this.clrIconUniqId);\n    } else if (existingAriaLabelledBy && existingAriaLabelledBy.indexOf(this.clrIconUniqId) < 0) {\n      this.setAttribute('aria-labelledby', existingAriaLabelledBy + ' ' + this.clrIconUniqId);\n    }\n  };\n\n  ClarityIconElement.prototype._injectTemplate = function(shapeTemplate?: string) {\n    // Accepting the argument, shapeTemplate, will help us to update the shape template\n    // right before the injection.\n    if (shapeTemplate && shapeTemplate !== this.currentShapeTemplate) {\n      this.currentShapeTemplate = shapeTemplate;\n    }\n\n    this.innerHTML = this.currentShapeTemplate;\n\n    if (this.currentTitleAttrVal) {\n      this._setAriaLabelledBy();\n      this._appendCustomTitle();\n    }\n  };\n\n  ClarityIconElement.prototype._injectErrorTemplate = function() {\n    this.currentShapeTemplate = ApiModule.instance.get('error');\n    this._injectTemplate();\n  };\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ShapeTemplateObservables } from '../interfaces/icon-interfaces';\n\n/* tslint:disable:no-namespace */\nexport namespace ShapeTemplateObserverModule {\n  export const changeHandlerCallbacks: ShapeTemplateObservables = {};\n\n  class ShapeTemplateObserver {\n    private callbacks: ShapeTemplateObservables = changeHandlerCallbacks;\n\n    public subscribeTo(shapeName: string, changeHandlerCallback: Function) {\n      if (!this.callbacks[shapeName]) {\n        this.callbacks[shapeName] = [changeHandlerCallback];\n      } else {\n        if (this.callbacks[shapeName].indexOf(changeHandlerCallback) === -1) {\n          this.callbacks[shapeName].push(changeHandlerCallback);\n        }\n      }\n\n      // this returned function give users an ability to remove the subscription\n      return () => {\n        const removeAt = this.callbacks[shapeName].indexOf(changeHandlerCallback);\n        this.callbacks[shapeName].splice(removeAt, 1);\n\n        // if the array is empty, remove the property from the callbacks\n        if (this.callbacks[shapeName].length === 0) {\n          delete this.callbacks[shapeName];\n        }\n      };\n    }\n\n    public emitChanges(shapeName: string, template: string) {\n      if (this.callbacks[shapeName]) {\n        // this will emit changes to all observers\n        // by calling their callback functions on template changes\n        this.callbacks[shapeName].map((changeHandlerCallback: Function) => {\n          changeHandlerCallback(template);\n        });\n      }\n    }\n  }\n\n  export const instance = new ShapeTemplateObserver();\n}\n"],"sourceRoot":""}